I have known that timer interrupts generated by the system's timing hardware at regular intervals.
A 64-bit variable called jiffies_64 in the kernel is a global variable which is considered a counter, and is initialized to 0 at system boot.
Driver writers normally access the jiffies variable, an unsigned long that is the same as either jiffies_64 or its least significant bits.
Every time a timer interrupt occurs, the value of an internal kernel counter is incremented. The counter represents the number of clock ticks since last boot.
Both jiffies and jiffies_64 must be considered read-only. They are delcared as volatile to tell compiler not to optimize memory reads.
