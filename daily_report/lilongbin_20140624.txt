In the morning I learned the shell scripts. I realized that the variable is unnecessary to declare, we could use "=" to evaluating the value on the right to the variable, and if we want to use it again, wo should add "$" before the variable. Then I write a shell scripts to configure ubuntu for embedded develepment environment, see the following.
---------------------------------------------------
#! /bin/bash
# this script is available for ubuntu to configurate embedded environment
sudo apt-get update		#update the source.list
sudo apt-get upgrade	#upgrade the software have installed on the system

#list the software need to be installed to the variable FILELIST
FILELIST="vim rar unrar nautilus-open-terminal ctags cscope build-essential git-core flex bison gperf gawk zip unzip rar unrar p7pzip-full ckermit putty tftp-hpa tftpd-hpanfs-kernel-server meld gettext graphviz doxygen curl ghex libc6-dev libncurses5-dev g++-multilib subversion libreadline-gplv2-dev gimpi"
#install one software every cycle
for file in $FILELIST
do
	echo "installing $file ..."
	sudo apt-get install -y $file
	echo "$file installed successfully !"
done

#configure the vim
read -p "Do you want to initialize your vim, yes or not (y/n)?" select
if [ "$select" = "y" ]
then
	echo "set nu" > ~/.vimrc
	echo "set autoindent" >> ~/.vimrc
	echo "set tabstop=4" >> ~/.vimrc
else
	echo "Nothing to be done."
fi

read -p "Is your computer uesed for multimedia, yes or no (y/n)?:" select
if [ "$select" = "y" ]
then
	echo "This will take you a long time to download."
	sudo apt-get install ubuntu-restricted-extras
else
	echo "Nothing to be done."
fi

echo "build succeeded, congratulations !"
------------------------------------------------
And then I learned user management.
If you want to add an user named John, you can do this:
	First, change to root and use the command "useradd -m -s /bin/bash John", -m means to creatie user's home directory, and -s to appoint user's shell class, sh, csh, tcsh or bash;
	Then, use "passwd john" to set user's password, if you don't do this step, the user can't login the system;
	If you want the new user John could use "sudo", you need to modify the file "/etc/sudoers".
If you want to delete the user John, you could do this:
	Use the command "sudo userdel -r John" to delete the user and the home directory, or use "sudo userdel John" just delete user John but keep the directory.
If you want to modify user's name John to mike, do this:
	Execute "sudo usermod -l mike -m -d /home/mike John", -l means to modify user's name to mike, -d means to appoint user's directory /home/mike and the directory /home/mike should exist; -m means to move the old directory to the new directory, if the old directory not exist, then create it.

