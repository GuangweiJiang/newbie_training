Most drivers need--in addition to the ability to read and write the device--the ability to perform various types of hardware control via the device driver. These operations are usually supported via the ioctl method, which implements the system call by the same name.
In user space, the ioctl system call has a prototype of some arguments; the actual nature of the third argument depends on the specific control command being issued (the second argument). Some commands take no arguments, some take an integer value, and some take a pointer to other data. Using a pointer is the way to pass arbitrary data to the ioctl call; the device is then able to exchange any amount of data with user space.
The ioctl driver method has a prototype that differs somewhat from the user-space version. The cmd argument is passed from the user unchanged, and the optional arg argument is passed in the form of an unsigned long, regardless of whether it was given by the user as an integer or a pointer. If the invoking program doesn't pass a third argument, the arg value received by the driver operation is undefined.
