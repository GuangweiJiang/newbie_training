We need to choose the numbers that correspond to commands before writing the code for ioctl. The ioctl command numbers should be unique across the system in order to prevent errors caused by issuing the right command to the wrong device.
To help programmers create unique ioctl command codes, These codes have been split up into several bitfields. The first version of Linux used 16-bit numbers: the top eight were the "magic" numbers associated with the device, and the bottom eight were a sequential number, unique within the device.
New symbols are defined int <linux/ioctl.h>. The approved way to define ioctl command numbers uses four bitfields. type is the first bitfield which defined as the magic number, and the orfinal number is a sequential number who is eight bits wide too. The direction of the transfer, if the particular command involves a data transfer, is a bit mask. The last bitfields defines the size of user data incolved. The width of this field is architecture dependent, but is usually 13 or 14 bits.
The header file <asm/ioctl.h>, which is included by <linux/ioctl.h>, defines macros that help set up the command numbers.
